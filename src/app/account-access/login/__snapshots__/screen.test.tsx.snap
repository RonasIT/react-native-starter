// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Login screen should match the snapshot 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <RCTScrollView>
    <View>
      <View
        style={
          Array [
            Object {
              "flex": 1,
            },
            Array [
              Object {
                "paddingHorizontal": 24,
              },
            ],
          ]
        }
      >
        <Text
          style={
            Array [
              Object {
                "color": "#FFFFFF",
                "fontFamily": "SFProTextRegular",
                "fontSize": 16,
                "lineHeight": 29.44,
              },
              Object {
                "fontFamily": "SFProDisplayBold",
                "fontSize": 27.2,
                "lineHeight": 39.36,
              },
              Object {
                "marginVertical": 64,
              },
            ]
          }
        >
          Welcome to [missing {{value}} value]
        </Text>
        <View
          style={
            Array [
              Object {
                "marginBottom": 19.2,
              },
              undefined,
            ]
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#FFFFFF",
                  "fontFamily": "SFProTextRegular",
                  "fontSize": 16,
                  "lineHeight": 29.44,
                },
                Object {
                  "fontFamily": "SFProDisplayRegular",
                  "fontSize": 22.4,
                  "lineHeight": 24.64,
                },
                Object {
                  "marginBottom": 8,
                },
              ]
            }
          >
            Email
          </Text>
          <View
            onTouchEnd={[Function]}
            onTouchStart={[Function]}
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#18191F",
                  "borderColor": "#18191F",
                  "borderRadius": 10,
                  "borderWidth": 1,
                  "flexDirection": "row",
                  "paddingLeft": 20,
                  "paddingRight": 20,
                  "position": "relative",
                  "width": "100%",
                },
                false,
                false,
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <TextInput
              allowFontScaling={true}
              autoCapitalize="none"
              dirty={false}
              editable={true}
              errors={Object {}}
              getFieldHelpers={[Function]}
              getFieldMeta={[Function]}
              getFieldProps={[Function]}
              handleReset={[Function]}
              handleSubmit={[Function]}
              initialErrors={Object {}}
              initialTouched={Object {}}
              initialValues={
                LoginForm {
                  "email": "",
                  "password": "",
                }
              }
              isSubmitting={false}
              isValid={true}
              isValidating={false}
              keyboardType="email-address"
              onBlur={[Function]}
              onChangeText={[Function]}
              onFocus={[Function]}
              placeholderTextColor="#FFFFFF80"
              registerField={[Function]}
              rejectResponderTermination={true}
              resetForm={[Function]}
              setErrors={[Function]}
              setFieldError={[Function]}
              setFieldTouched={[Function]}
              setFieldValue={[Function]}
              setFormikState={[Function]}
              setStatus={[Function]}
              setSubmitting={[Function]}
              setTouched={[Function]}
              setValues={[Function]}
              style={
                Array [
                  Object {
                    "color": "#FFFFFF",
                    "flex": 1,
                    "fontSize": 18.4,
                    "height": 54,
                    "paddingBottom": 15,
                    "paddingTop": 15,
                  },
                  Object {},
                  undefined,
                ]
              }
              submitCount={0}
              submitForm={[Function]}
              testID="email-input"
              touched={Object {}}
              underlineColorAndroid="transparent"
              unregisterField={[Function]}
              validateField={[Function]}
              validateForm={[Function]}
              validateOnBlur={true}
              validateOnChange={true}
              validateOnMount={false}
              value=""
            />
          </View>
          <Text
            style={
              Array [
                Object {
                  "color": "#FFFFFF",
                  "fontFamily": "SFProTextRegular",
                  "fontSize": 16,
                  "lineHeight": 29.44,
                },
                undefined,
                Object {},
              ]
            }
            testID="validation-error"
          >
            
          </Text>
        </View>
        <View
          style={
            Array [
              Object {
                "marginBottom": 19.2,
              },
              undefined,
            ]
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#FFFFFF",
                  "fontFamily": "SFProTextRegular",
                  "fontSize": 16,
                  "lineHeight": 29.44,
                },
                Object {
                  "fontFamily": "SFProDisplayRegular",
                  "fontSize": 22.4,
                  "lineHeight": 24.64,
                },
                Object {
                  "marginBottom": 8,
                },
              ]
            }
          >
            Password
          </Text>
          <View
            onTouchEnd={[Function]}
            onTouchStart={[Function]}
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#18191F",
                  "borderColor": "#18191F",
                  "borderRadius": 10,
                  "borderWidth": 1,
                  "flexDirection": "row",
                  "paddingLeft": 20,
                  "paddingRight": 20,
                  "position": "relative",
                  "width": "100%",
                },
                false,
                false,
                Object {
                  "paddingRight": 50,
                },
                undefined,
                undefined,
              ]
            }
          >
            <TextInput
              allowFontScaling={true}
              dirty={false}
              editable={true}
              errors={Object {}}
              getFieldHelpers={[Function]}
              getFieldMeta={[Function]}
              getFieldProps={[Function]}
              handleReset={[Function]}
              handleSubmit={[Function]}
              initialErrors={Object {}}
              initialTouched={Object {}}
              initialValues={
                LoginForm {
                  "email": "",
                  "password": "",
                }
              }
              isSubmitting={false}
              isValid={true}
              isValidating={false}
              onBlur={[Function]}
              onChangeText={[Function]}
              onFocus={[Function]}
              placeholderTextColor="#FFFFFF80"
              registerField={[Function]}
              rejectResponderTermination={true}
              resetForm={[Function]}
              secureTextEntry={true}
              setErrors={[Function]}
              setFieldError={[Function]}
              setFieldTouched={[Function]}
              setFieldValue={[Function]}
              setFormikState={[Function]}
              setStatus={[Function]}
              setSubmitting={[Function]}
              setTouched={[Function]}
              setValues={[Function]}
              style={
                Array [
                  Object {
                    "color": "#FFFFFF",
                    "flex": 1,
                    "fontSize": 18.4,
                    "height": 54,
                    "paddingBottom": 15,
                    "paddingTop": 15,
                  },
                  Object {},
                  undefined,
                ]
              }
              submitCount={0}
              submitForm={[Function]}
              testID="password-input"
              touched={Object {}}
              underlineColorAndroid="transparent"
              unregisterField={[Function]}
              validateField={[Function]}
              validateForm={[Function]}
              validateOnBlur={true}
              validateOnChange={true}
              validateOnMount={false}
              value=""
            />
            <View
              accessible={true}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "height": "100%",
                  "justifyContent": "center",
                  "opacity": 0.5,
                  "position": "absolute",
                  "right": 20,
                  "top": 0,
                  "width": 30,
                }
              }
            />
          </View>
          <Text
            style={
              Array [
                Object {
                  "color": "#FFFFFF",
                  "fontFamily": "SFProTextRegular",
                  "fontSize": 16,
                  "lineHeight": 29.44,
                },
                undefined,
                Object {},
              ]
            }
            testID="validation-error"
          >
            
          </Text>
        </View>
        <View
          style={
            Object {
              "marginTop": 32,
            }
          }
        >
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#26a0f8",
                "borderColor": "#26a0f8",
                "borderRadius": 12,
                "borderWidth": 1,
                "opacity": 1,
                "paddingHorizontal": 15,
                "paddingVertical": 13,
                "shadowColor": "#26a0f8",
                "width": "100%",
              }
            }
            testID="submit-button"
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "#FFFFFF",
                    "fontFamily": "SFProTextRegular",
                    "fontSize": 16,
                    "lineHeight": 29.44,
                  },
                  undefined,
                  Array [
                    Object {
                      "fontFamily": "SFProTextSemiBold",
                      "fontSize": 18.4,
                      "fontWeight": "600",
                      "lineHeight": 30,
                      "textAlign": "center",
                    },
                    Object {
                      "color": "#FFFFFF",
                    },
                    false,
                  ],
                ]
              }
            >
              Login
            </Text>
          </View>
        </View>
        <Text
          style={
            Array [
              Object {
                "color": "#FFFFFF",
                "fontFamily": "SFProTextRegular",
                "fontSize": 16,
                "lineHeight": 29.44,
              },
              undefined,
              Array [
                Object {
                  "color": "#FFFFFF",
                  "fontSize": 13.6,
                  "textAlign": "right",
                  "width": "100%",
                },
                undefined,
              ],
            ]
          }
        >
          vundefined (undefined)
        </Text>
      </View>
    </View>
  </RCTScrollView>
</RNCSafeAreaProvider>
`;
