// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Home screen should match the snapshot 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "backgroundColor": "rgb(242, 242, 242)",
              "flex": 1,
            },
            undefined,
          ]
        }
      >
        <View
          collapsable={false}
          pointerEvents="box-none"
          style={
            Object {
              "zIndex": 1,
            }
          }
        >
          <View
            accessibilityElementsHidden={false}
            importantForAccessibility="auto"
            onLayout={[Function]}
            pointerEvents="box-none"
            style={null}
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                Object {
                  "bottom": 0,
                  "left": 0,
                  "opacity": 1,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                  "zIndex": 0,
                }
              }
            >
              <View
                collapsable={false}
                style={
                  Object {
                    "backgroundColor": "rgb(255, 255, 255)",
                    "borderBottomColor": "rgb(216, 216, 216)",
                    "flex": 1,
                    "shadowColor": "rgb(216, 216, 216)",
                    "shadowOffset": Object {
                      "height": 0.5,
                      "width": 0,
                    },
                    "shadowOpacity": 0.85,
                    "shadowRadius": 0,
                  }
                }
              />
            </View>
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                Object {
                  "height": 44,
                  "maxHeight": undefined,
                  "minHeight": undefined,
                  "opacity": undefined,
                  "transform": undefined,
                }
              }
            >
              <View
                pointerEvents="none"
                style={
                  Object {
                    "height": 0,
                  }
                }
              />
              <View
                pointerEvents="box-none"
                style={
                  Object {
                    "alignItems": "stretch",
                    "flex": 1,
                    "flexDirection": "row",
                  }
                }
              >
                <View
                  collapsable={false}
                  pointerEvents="box-none"
                  style={
                    Object {
                      "alignItems": "flex-start",
                      "flexBasis": 0,
                      "flexGrow": 1,
                      "justifyContent": "center",
                      "marginStart": 0,
                      "opacity": 1,
                    }
                  }
                />
                <View
                  collapsable={false}
                  pointerEvents="box-none"
                  style={
                    Object {
                      "justifyContent": "center",
                      "marginHorizontal": 16,
                      "maxWidth": 718,
                      "opacity": 1,
                    }
                  }
                >
                  <Text
                    accessibilityRole="header"
                    aria-level="1"
                    collapsable={false}
                    numberOfLines={1}
                    onLayout={[Function]}
                    style={
                      Object {
                        "color": "rgb(28, 28, 30)",
                        "fontSize": 17,
                        "fontWeight": "600",
                      }
                    }
                  >
                    Home
                  </Text>
                </View>
                <View
                  collapsable={false}
                  pointerEvents="box-none"
                  style={
                    Object {
                      "alignItems": "flex-end",
                      "flexBasis": 0,
                      "flexGrow": 1,
                      "justifyContent": "center",
                      "marginEnd": 0,
                      "opacity": 1,
                    }
                  }
                />
              </View>
            </View>
          </View>
        </View>
        <View
          onLayout={[Function]}
          style={
            Object {
              "flex": 1,
            }
          }
        >
          <View
            pointerEvents="box-none"
            style={
              Object {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                Object {
                  "opacity": 1,
                }
              }
            />
            <View
              accessibilityElementsHidden={false}
              closing={false}
              gestureVelocityImpact={0.3}
              importantForAccessibility="auto"
              onClose={[Function]}
              onGestureBegin={[Function]}
              onGestureCanceled={[Function]}
              onGestureEnd={[Function]}
              onOpen={[Function]}
              onTransition={[Function]}
              pointerEvents="box-none"
              style={
                Array [
                  Object {
                    "display": "flex",
                    "overflow": undefined,
                  },
                  Object {
                    "bottom": 0,
                    "left": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  },
                ]
              }
              transitionSpec={
                Object {
                  "close": Object {
                    "animation": "spring",
                    "config": Object {
                      "damping": 500,
                      "mass": 3,
                      "overshootClamping": true,
                      "restDisplacementThreshold": 10,
                      "restSpeedThreshold": 10,
                      "stiffness": 1000,
                    },
                  },
                  "open": Object {
                    "animation": "spring",
                    "config": Object {
                      "damping": 500,
                      "mass": 3,
                      "overshootClamping": true,
                      "restDisplacementThreshold": 10,
                      "restSpeedThreshold": 10,
                      "stiffness": 1000,
                    },
                  },
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  Object {
                    "flex": 1,
                  }
                }
              >
                <View
                  collapsable={false}
                  forwardedRef={[Function]}
                  handlerTag={1}
                  handlerType="PanGestureHandler"
                  needsOffscreenAlphaCompositing={false}
                  onGestureHandlerEvent={[Function]}
                  onGestureHandlerStateChange={[Function]}
                  style={
                    Object {
                      "flex": 1,
                      "transform": Array [
                        Object {
                          "translateX": 0,
                        },
                        Object {
                          "translateX": 0,
                        },
                      ],
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "flex": 1,
                          "overflow": "hidden",
                        },
                        Array [
                          Object {
                            "backgroundColor": "rgb(242, 242, 242)",
                          },
                          undefined,
                        ],
                      ]
                    }
                  >
                    <View
                      style={
                        Object {
                          "flex": 1,
                          "flexDirection": "column-reverse",
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "flex": 1,
                          }
                        }
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "flex": 1,
                              },
                              Object {},
                            ]
                          }
                          testID="home-screen"
                        >
                          <RCTScrollView
                            ListEmptyComponent={<ItemsListEmptyState />}
                            ListFooterComponent={false}
                            contentContainerStyle={
                              Array [
                                Object {
                                  "minHeight": "100%",
                                  "paddingBottom": 50,
                                },
                                Object {
                                  "paddingHorizontal": 24,
                                },
                              ]
                            }
                            data={
                              Array [
                                User {
                                  "createdAt": undefined,
                                  "deletedAt": undefined,
                                  "email": "test1@test.com",
                                  "id": 1,
                                  "isDeleting": undefined,
                                  "isUpdating": undefined,
                                  "name": "Test 1",
                                  "updatedAt": undefined,
                                  Symbol(immer-draftable): true,
                                },
                                User {
                                  "createdAt": undefined,
                                  "deletedAt": undefined,
                                  "email": "test2@test.com",
                                  "id": 2,
                                  "isDeleting": undefined,
                                  "isUpdating": undefined,
                                  "name": "Test 2",
                                  "updatedAt": undefined,
                                  Symbol(immer-draftable): true,
                                },
                              ]
                            }
                            getItem={[Function]}
                            getItemCount={[Function]}
                            keyExtractor={[Function]}
                            onContentSizeChange={[Function]}
                            onEndReached={[Function]}
                            onLayout={[Function]}
                            onMomentumScrollBegin={[Function]}
                            onMomentumScrollEnd={[Function]}
                            onScroll={[Function]}
                            onScrollBeginDrag={[Function]}
                            onScrollEndDrag={[Function]}
                            refreshControl={
                              <AppRefreshControl
                                onRefresh={[Function]}
                                refreshing={false}
                              />
                            }
                            removeClippedSubviews={false}
                            renderItem={[Function]}
                            scrollEventThrottle={50}
                            stickyHeaderIndices={Array []}
                            testID="users-list"
                            viewabilityConfigCallbackPairs={Array []}
                          >
                            <RCTRefreshControl />
                            <View>
                              <View
                                onLayout={[Function]}
                                style={null}
                              >
                                <View
                                  style={
                                    Object {
                                      "borderBottomColor": "#FFFFFF",
                                      "borderBottomWidth": 2,
                                      "paddingVertical": 8,
                                    }
                                  }
                                  testID="user-item"
                                >
                                  <Text
                                    numberOfLines={1}
                                    style={
                                      Array [
                                        Object {
                                          "backgroundColor": "transparent",
                                          "color": "#20303C",
                                          "textAlign": "left",
                                        },
                                        undefined,
                                        undefined,
                                        undefined,
                                        undefined,
                                        undefined,
                                        undefined,
                                        undefined,
                                        undefined,
                                        Array [
                                          Object {
                                            "fontFamily": "SFProDisplayRegular",
                                            "fontSize": 22.4,
                                            "lineHeight": 24.64,
                                          },
                                          Object {
                                            "color": "#FFFFFF",
                                          },
                                          undefined,
                                        ],
                                      ]
                                    }
                                  >
                                    #
                                    1
                                    : 
                                    Test 1
                                  </Text>
                                  <Text
                                    numberOfLines={1}
                                    style={
                                      Array [
                                        Object {
                                          "backgroundColor": "transparent",
                                          "color": "#20303C",
                                          "textAlign": "left",
                                        },
                                        undefined,
                                        undefined,
                                        undefined,
                                        undefined,
                                        undefined,
                                        undefined,
                                        undefined,
                                        undefined,
                                        Array [
                                          Object {
                                            "fontFamily": "SFProTextRegular",
                                            "fontSize": 16,
                                            "lineHeight": 29.44,
                                          },
                                          Object {
                                            "color": "#FFFFFF",
                                          },
                                          undefined,
                                        ],
                                      ]
                                    }
                                  >
                                    Email: 
                                    test1@test.com
                                  </Text>
                                </View>
                              </View>
                              <View
                                onLayout={[Function]}
                                style={null}
                              >
                                <View
                                  style={
                                    Object {
                                      "borderBottomColor": "#FFFFFF",
                                      "borderBottomWidth": 2,
                                      "paddingVertical": 8,
                                    }
                                  }
                                  testID="user-item"
                                >
                                  <Text
                                    numberOfLines={1}
                                    style={
                                      Array [
                                        Object {
                                          "backgroundColor": "transparent",
                                          "color": "#20303C",
                                          "textAlign": "left",
                                        },
                                        undefined,
                                        undefined,
                                        undefined,
                                        undefined,
                                        undefined,
                                        undefined,
                                        undefined,
                                        undefined,
                                        Array [
                                          Object {
                                            "fontFamily": "SFProDisplayRegular",
                                            "fontSize": 22.4,
                                            "lineHeight": 24.64,
                                          },
                                          Object {
                                            "color": "#FFFFFF",
                                          },
                                          undefined,
                                        ],
                                      ]
                                    }
                                  >
                                    #
                                    2
                                    : 
                                    Test 2
                                  </Text>
                                  <Text
                                    numberOfLines={1}
                                    style={
                                      Array [
                                        Object {
                                          "backgroundColor": "transparent",
                                          "color": "#20303C",
                                          "textAlign": "left",
                                        },
                                        undefined,
                                        undefined,
                                        undefined,
                                        undefined,
                                        undefined,
                                        undefined,
                                        undefined,
                                        undefined,
                                        Array [
                                          Object {
                                            "fontFamily": "SFProTextRegular",
                                            "fontSize": 16,
                                            "lineHeight": 29.44,
                                          },
                                          Object {
                                            "color": "#FFFFFF",
                                          },
                                          undefined,
                                        ],
                                      ]
                                    }
                                  >
                                    Email: 
                                    test2@test.com
                                  </Text>
                                </View>
                              </View>
                              <View
                                style={
                                  Object {
                                    "height": 0,
                                  }
                                }
                              />
                            </View>
                          </RCTScrollView>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;
